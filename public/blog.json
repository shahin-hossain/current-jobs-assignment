[
    {
        "id": "as1265ad",
        "title": "When should you use context API?",
        "author": "John Doe",
        "img": "https://ps.w.org/user-avatar-reloaded/assets/icon-256x256.png?rev=2540745",
        "date": "2023-01-15",
        "content": "The Context API in React is a powerful tool for managing global state. You should consider using it when you have data that needs to be shared across multiple components, especially when prop drilling becomes cumbersome. Context API provides a clean and efficient way to pass data through the component tree without having to pass props down manually at each level."
    },
    {
        "id": "as1265a6",
        "title": "What is a custom hook?",
        "author": "Jane Smith",
        "img": "https://aehss.edu.pk/images/team2.png",
        "date": "2023-02-20",
        "content": "A custom hook in React is a JavaScript function that lets you reuse stateful logic across different components. Custom hooks allow you to extract and share logic between components, making your code more organized and maintainable. They are a powerful tool for abstracting complex logic and can greatly enhance code reusability in your React applications."
    },
    {
        "id": "as1255ad",
        "title": "What is useRef?",
        "author": "Alice Johnson",
        "img": "https://www.sattvikcouncilofindia.org/static/assets/img/user-male.png",
        "date": "2023-03-10",
        "content": "In React, useRef is a hook that provides access to a mutable ref object. useRef is commonly used for accessing and interacting with DOM elements directly in functional components. It allows you to maintain a reference to a DOM element across renders, which can be useful for managing focus, triggering animations, and other scenarios where direct DOM manipulation is necessary."
    },
    {
        "id": "as1265aa",
        "title": "What is useMemo?",
        "author": "David Williams",
        "img": "https://cdn.icon-icons.com/icons2/2643/PNG/512/male_boy_person_people_avatar_icon_159358.png",
        "date": "2023-04-05",
        "content": "useMemo is a hook in React that allows you to memoize the result of a function or computation. It is commonly used to optimize performance by avoiding unnecessary recalculations. When you have expensive calculations or computations that depend on certain inputs and those inputs haven't changed, useMemo can be used to cache the result and return it without re-running the computation, which can lead to significant performance improvements in your React applications."
    }
]